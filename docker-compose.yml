services:
  db:
    image: postgres:16
    container_name: aurora_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: aurora_users
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB']
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - aurora_network

  app:
    build: .
    container_name: aurora_app
    restart: unless-stopped
    ports:
      - '3001:3001'
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASS: postgres
      DB_NAME: aurora_users
      DB_LOGGING: false
      PORT: 3001
      NODE_ENV: production
      USERS_API_URL: http://localhost:3001/v1
    depends_on:
      db:
        condition: service_healthy
    networks:
      - aurora_network

volumes:
  pgdata:

networks:
  aurora_network:
    driver: bridge