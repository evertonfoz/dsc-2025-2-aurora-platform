name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Detect Node project
        id: detect
        run: |
          if [ -f package.json ]; then
            echo "has_node=true" >> $GITHUB_OUTPUT
          else
            echo "has_node=false" >> $GITHUB_OUTPUT
          fi

      - uses: actions/setup-node@v4
        if: steps.detect.outputs.has_node == 'true'
        with:
          node-version: 20
          cache: npm

      - name: Detect workspaces
        id: ws
        if: steps.detect.outputs.has_node == 'true'
        run: |
          if grep -q '"workspaces"' package.json; then
            echo "has_ws=true" >> $GITHUB_OUTPUT
          else
            echo "has_ws=false" >> $GITHUB_OUTPUT
          fi

      - run: npm ci
        if: steps.detect.outputs.has_node == 'true'

      - name: Lint (root)
        if: steps.detect.outputs.has_node == 'true' && steps.ws.outputs.has_ws == 'false'
        run: npm run lint --if-present

      - name: Lint (workspaces)
        if: steps.detect.outputs.has_node == 'true' && steps.ws.outputs.has_ws == 'true'
        run: npm -ws run lint --if-present

      - name: No Node project — lint skipped (pass)
        if: steps.detect.outputs.has_node != 'true'
        run: echo "No package.json at repo root. Lint skipped."

  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - name: Detect Node project
        id: detect
        run: |
          if [ -f package.json ]; then
            echo "has_node=true" >> $GITHUB_OUTPUT
          else
            echo "has_node=false" >> $GITHUB_OUTPUT
          fi
      - uses: actions/setup-node@v4
        if: steps.detect.outputs.has_node == 'true'
        with:
          node-version: 20
          cache: npm
      - name: Detect workspaces
        id: ws
        if: steps.detect.outputs.has_node == 'true'
        run: |
          if grep -q '"workspaces"' package.json; then
            echo "has_ws=true" >> $GITHUB_OUTPUT
          else
            echo "has_ws=false" >> $GITHUB_OUTPUT
          fi
      - run: npm ci
        if: steps.detect.outputs.has_node == 'true'
      - name: Build (root)
        if: steps.detect.outputs.has_node == 'true' && steps.ws.outputs.has_ws == 'false'
        run: npm run build --if-present
      - name: Build (workspaces)
        if: steps.detect.outputs.has_node == 'true' && steps.ws.outputs.has_ws == 'true'
        run: npm -ws run build --if-present
      - name: No Node project — build skipped (pass)
        if: steps.detect.outputs.has_node != 'true'
        run: echo "No package.json at repo root. Build skipped."

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Detect Node project
        id: detect
        run: |
          if [ -f package.json ]; then
            echo "has_node=true" >> $GITHUB_OUTPUT
          else
            echo "has_node=false" >> $GITHUB_OUTPUT
          fi
      - uses: actions/setup-node@v4
        if: steps.detect.outputs.has_node == 'true'
        with:
          node-version: 20
          cache: npm
      - name: Detect workspaces
        id: ws
        if: steps.detect.outputs.has_node == 'true'
        run: |
          if grep -q '"workspaces"' package.json; then
            echo "has_ws=true" >> $GITHUB_OUTPUT
          else
            echo "has_ws=false" >> $GITHUB_OUTPUT
          fi
      - run: npm ci
        if: steps.detect.outputs.has_node == 'true'
      - name: Test (root)
        if: steps.detect.outputs.has_node == 'true' && steps.ws.outputs.has_ws == 'false'
        run: npm test --if-present -- --ci
      - name: Test (workspaces)
        if: steps.detect.outputs.has_node == 'true' && steps.ws.outputs.has_ws == 'true'
        run: npm -ws run test --if-present -- --ci
      - name: No Node project — test skipped (pass)
        if: steps.detect.outputs.has_node != 'true'
        run: echo "No package.json at repo root. Test skipped."

  # Smoke job: runs DB-dependent smoke/integration tests against a Postgres service.
  smoke:
    runs-on: ubuntu-latest
    needs: build
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: aurora_users
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
    steps:
      - uses: actions/checkout@v4
      - name: Detect Node project
        id: detect
        run: |
          if [ -f package.json ]; then
            echo "has_node=true" >> $GITHUB_OUTPUT
          else
            echo "has_node=false" >> $GITHUB_OUTPUT
          fi
      - uses: actions/setup-node@v4
        if: steps.detect.outputs.has_node == 'true'
        with:
          node-version: 20
          cache: npm
      - run: npm ci
        if: steps.detect.outputs.has_node == 'true'
      - name: Install psql client (for readiness checks)
        run: sudo apt-get update && sudo apt-get install -y postgresql-client
      - name: Wait for Postgres to be ready
        env:
          PGHOST: 127.0.0.1
          PGPORT: 5432
          PGUSER: postgres
        run: |
          for i in $(seq 1 60); do
            pg_isready -h 127.0.0.1 -p 5432 -U postgres && break
            echo "Waiting for postgres... ($i/60)"
            sleep 1
          done
      - name: Run migrations (verbose)
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: 5432
          DB_USER: postgres
          DB_PASS: postgres
          DB_NAME: aurora_users
          DEBUG: typeorm:*
        run: |
          set -x
          # Capture stdout/stderr to migration.log and fail loudly with contents on error
          npm run migration:run 2>&1 | tee migration.log || (cat migration.log && exit 1)
          # Also print the log for successful runs
          cat migration.log || true
      - name: Upload migration log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: migration-log
          path: migration.log
      - name: Run smoke tests
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: 5432
          DB_USER: postgres
          DB_PASS: postgres
          DB_NAME: aurora_users
        run: npm run test -- test/smoke --runInBand
