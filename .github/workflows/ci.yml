name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Detect Node project
        id: detect
        run: |
          if [ -f package.json ]; then
            echo "has_node=true" >> $GITHUB_OUTPUT
          else
            echo "has_node=false" >> $GITHUB_OUTPUT
          fi

      - uses: actions/setup-node@v4
        if: steps.detect.outputs.has_node == 'true'
        with:
          node-version: 20
          cache: npm

      - name: Detect workspaces
        id: ws
        if: steps.detect.outputs.has_node == 'true'
        run: |
          if grep -q '"workspaces"' package.json; then
            echo "has_ws=true" >> $GITHUB_OUTPUT
          else
            echo "has_ws=false" >> $GITHUB_OUTPUT
          fi

      - run: npm ci
        if: steps.detect.outputs.has_node == 'true'

      - name: Lint (root)
        if: steps.detect.outputs.has_node == 'true' && steps.ws.outputs.has_ws == 'false'
        run: npm run lint --if-present

      - name: Lint (workspaces)
        if: steps.detect.outputs.has_node == 'true' && steps.ws.outputs.has_ws == 'true'
        run: npm -ws run lint --if-present

      - name: No Node project — lint skipped (pass)
        if: steps.detect.outputs.has_node != 'true'
        run: echo "No package.json at repo root. Lint skipped."

  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - name: Detect Node project
        id: detect
        run: |
          if [ -f package.json ]; then
            echo "has_node=true" >> $GITHUB_OUTPUT
          else
            echo "has_node=false" >> $GITHUB_OUTPUT
          fi
      - uses: actions/setup-node@v4
        if: steps.detect.outputs.has_node == 'true'
        with:
          node-version: 20
          cache: npm
      - name: Detect workspaces
        id: ws
        if: steps.detect.outputs.has_node == 'true'
        run: |
          if grep -q '"workspaces"' package.json; then
            echo "has_ws=true" >> $GITHUB_OUTPUT
          else
            echo "has_ws=false" >> $GITHUB_OUTPUT
          fi
      - run: npm ci
        if: steps.detect.outputs.has_node == 'true'
      - name: Build (root)
        if: steps.detect.outputs.has_node == 'true' && steps.ws.outputs.has_ws == 'false'
        run: npm run build --if-present
      - name: Build (workspaces)
        if: steps.detect.outputs.has_node == 'true' && steps.ws.outputs.has_ws == 'true'
        run: npm -ws run build --if-present
      - name: No Node project — build skipped (pass)
        if: steps.detect.outputs.has_node != 'true'
        run: echo "No package.json at repo root. Build skipped."

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Detect Node project
        id: detect
        run: |
          if [ -f package.json ]; then
            echo "has_node=true" >> $GITHUB_OUTPUT
          else
            echo "has_node=false" >> $GITHUB_OUTPUT
          fi
      - uses: actions/setup-node@v4
        if: steps.detect.outputs.has_node == 'true'
        with:
          node-version: 20
          cache: npm
      - name: Detect workspaces
        id: ws
        if: steps.detect.outputs.has_node == 'true'
        run: |
          if grep -q '"workspaces"' package.json; then
            echo "has_ws=true" >> $GITHUB_OUTPUT
          else
            echo "has_ws=false" >> $GITHUB_OUTPUT
          fi
      - run: npm ci
        if: steps.detect.outputs.has_node == 'true'
      - name: Test (root)
        if: steps.detect.outputs.has_node == 'true' && steps.ws.outputs.has_ws == 'false'
        run: npm test --if-present -- --ci
      - name: Test (workspaces)
        if: steps.detect.outputs.has_node == 'true' && steps.ws.outputs.has_ws == 'true'
        run: npm -ws run test --if-present -- --ci
      - name: No Node project — test skipped (pass)
        if: steps.detect.outputs.has_node != 'true'
        run: echo "No package.json at repo root. Test skipped."
